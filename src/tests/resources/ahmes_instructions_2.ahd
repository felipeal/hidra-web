;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Arquivo 2 para teste das instruções da
;; Máquina Ahmes no Hidra
;;
;; RESULTADO ESPERADO:
;; A partir de 200, cada teste deve escrever o
;; valor 255 (0xFF) na memória.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test00: ORG, DB
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ORG    200
Test00:    DB    255

;; Labels para os outros testes:

Test01:    DB    1
Test02:    DB    1
Test03:    DB    1
Test04:    DB    1
Test05:    DB    1
Test06:    DB    1
Test07:    DB    1
Test08:    DB    1
Test09:    DB    1
Test10:    DB    1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Constantes:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ORG    150

Val000:    DB    0
Val001:    DB    1    ; 0b00000001
Val002:    DB    2
Val007:    DB    7    ; 0b00000111
Val014:    DB    14    ; 0b00001110
Val027:    DB    27
Val028:    DB    28    ; 0b00011100

Val063:    DB    63
Val121:    DB    121
Val127:    DB    127
Val128:    DB    128
Val129:    DB    129
Val224:    DB    224
Val248:    DB    248    
Val249:    DB    249
Val251:    DB    251
Val252:    DB    252
Val254:    DB    254
Val255:    DB    255

    ORG    0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test01: JZ
;; 6 Instruções, 16 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val007
    JZ    JumpJZ1    ; Jump ignorado
    ADD    Val249    ; 7 + 249 = 0 (overflow)

JumpJZ1:    JZ    JumpJZ2    ; Pula próxima instrução
    LDA    Val028    ; Nunca executada

JumpJZ2:    ADD    Val255    ; 0 + 255 = 255
    STA    Test01

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test02: JNZ
;; 6 Instruções, 16 Acessos / Total: 12 Instruções, 32 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val000
    JNZ    JumpJNZ1    ; Jump ignorado
    ADD    Val007    ; 0 + 7 = 7

JumpJNZ1:    JNZ    JumpJNZ2    ; Pula próxima instrução
    LDA    Val028    ; Nunca executada

JumpJNZ2:    ADD    Val248    ; 7 + 248 = 255
    STA    Test02

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test03: JC
;; 7 Instruções, 19 Acessos / Total: 19 Instruções, 51 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val127
    ADD    Val128    ; 127 + 128 = 255
    JC    JumpJC1    ; Jump ignorado
    ADD    Val128    ; 255 + 128 = 127 (carry)

JumpJC1:    JC    JumpJC2    ; Pula próxima instrução
    LDA    Val028    ; Nunca executada

JumpJC2:    ADD    Val128    ; 127 + 128 = 255
    STA    Test03

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test04: JNC
;; 6 Instruções, 16 Acessos / Total: 25 Instruções, 67 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val255
    ADD    Val128    ; 255 + 128 = 127 (carry)
    JNC    JumpJNC1    ; Jump ignorado
    ADD    Val128    ; 127 + 128 = 255

JumpJNC1:    JNC    JumpJNC2    ; Pula próxima instrução
    LDA    Val028    ; Nunca executada

JumpJNC2:    STA    Test04

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test05: JB
;; 6 Instruções, 16 Acessos / Total: 31 Instruções, 83 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val255
    SUB    Val128    ; 255 - 128 = 127
    JB    JumpJB1    ; Jump ignorado
    SUB    Val128    ; 127 - 128 = 255 (borrow)

JumpJB1:    JB    JumpJB2    ; Pula próxima instrução
    LDA    Val028    ; Nunca executada

JumpJB2:    STA    Test05

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test06: JNB
;; 7 Instruções, 19 Acessos / Total: 38 Instruções, 102 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val127
    SUB    Val128    ; 127 - 128 = 255 (borrow)
    JNB    JumpJNB1    ; Jump ignorado
    SUB    Val128    ; 255 - 128 = 127

JumpJNB1:    JNB    JumpJNB2    ; Pula próxima instrução
    LDA    Val028    ; Nunca executada

JumpJNB2:    ADD    Val128    ; 127 + 128 = 255
    STA    Test06

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test07: SHR
;; 7 Instruções, 15 Acessos / Total: 45 Instruções, 117 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val014
    SHR        ; shr(14) = 7 (carry = 0)
    JC    JumpSHR1    ; Jump ignorado
    SHR        ; shr(7) = 3 (carry = 1)

JumpSHR1:    JC    JumpSHR2    ; Pula próxima instrução
    LDA    Val028    ; Nunca executada

JumpSHR2:    ADD    Val252    ; 3 + 252 = 255
    STA    Test07

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test08: SHL
;; 7 Instruções, 15 Acessos / Total: 52 Instruções, 132 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val121
    SHL        ; shl(121) = 242 (carry = 0)
    JC    JumpSHL1    ; Jump ignorado
    SHL        ; shl(242) = 228 (carry = 1)

JumpSHL1:    JC    JumpSHL2    ; Pula próxima instrução
    LDA    Val028    ; Nunca executada

JumpSHL2:    ADD    Val027    ; 228 + 27 = 255
    STA    Test08

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test09: ROR
;; 7 Instruções, 15 Acessos / Total: 59 Instruções, 147 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val000
    ROR        ; desativa o carry
    LDA    Val001
    ROR        ; ror(1) = 0 (carry = 1)
    ROR        ; ror(0 (carry = 1)) = 128
    ADD    Val127    ; 128 + 127 = 255
    STA    Test09

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Test10: ROL
;; 7 Instruções, 15 Acessos / Total: 66 Instruções, 162 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDA    Val000
    ROL        ; desativa o carry
    LDA    Val128
    ROL        ; rol(128) = 0 (carry = 1)
    ROL        ; rol(0 (carry = 1)) = 1
    ADD    Val254    ; 1 + 254 = 255
    STA    Test10

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Fim dos testes
;; Total: 67 Instruções, 163 Acessos
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
   HLT
